Functionality:  SATISFACTORY

Wow, this looks great, and I really love the idea of showing folks when they
have a duplicate number using colors!

Design:  CLOSE

Please put commments before the functions.

I like all of the citations you use, but "YouTube" doesn't tell me much.
I realize that a discussion with a generative AI is difficult to reproduce,
let alone cite, but giving even a list of YouTube videos used would be
helpful.  Ditto with the StackOverflow.

Ditto usinga void cast to eliminate a warning on max_y.

Why call has_colors()?  I mean, it's great to check, but unnecessary for
this assignment.  Please cite where you got this.

Please don't use magic numbers like 48 (CHAR_SHIFT).  Use '0', which
will give you a more portable value you can use on any system, and will
make the purpose of this more clear.

Did you actually find that your system used 127 as backspace, and you
needed this, or did you just randomly add it?

If you'd used an array for the instructions, printing them would've been
a nice small loop, instead of repeating all of that code.  And you could've
used max_y to center everything vertically.

gcc -o game game.c -g -Wall -lncurses
==89990== Memcheck, a memory error detector
==89990== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==89990== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==89990== Command: ./game cheat
==89990== 
==89990== 
==89990== HEAP SUMMARY:
==89990==     in use at exit: 104,609 bytes in 476 blocks
==89990==   total heap usage: 510 allocs, 34 frees, 118,961 bytes allocated
==89990== 
==89990== LEAK SUMMARY:
==89990==    definitely lost: 0 bytes in 0 blocks
==89990==    indirectly lost: 0 bytes in 0 blocks
==89990==      possibly lost: 0 bytes in 0 blocks
==89990==    still reachable: 0 bytes in 0 blocks
==89990==         suppressed: 104,609 bytes in 476 blocks
==89990== 
==89990== For lists of detected and suppressed errors, rerun with: -s
==89990== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
